if(CMAKE_BUILD_TYPE STREQUAL Release)
    message("~~~~~~~~~~~~~~Release~~~~~~~~~~~~~~~")
    if(WIN32 AND NOT MINGW)
        message("~~~~~~~~~WIN32 Configuration~~~~~~~~")
    elseif(WIN32 AND MINGW)
        message("~~~~~~~~~MINGW Configuration~~~~~~~~")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
    elseif(UNIX AND NOT ANDROID)
        message("~~~~~~~~~UNIX Configuration~~~~~~~~~")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
    endif()

else()
    message("~~~~~~~~~~~~~~~Debug~~~~~~~~~~~~~~~~")
    if(WIN32 AND NOT MINGW)
        message("~~~~~~~~~WIN32 Configuration~~~~~~~~")
        add_definitions(/DPERFORMANCE)
    elseif(WIN32 AND MINGW)
        message("~~~~~~~~~MINGW Configuration~~~~~~~~")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g2")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ggdb")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")
        add_definitions(-DPERFORMANCE)
    elseif(UNIX AND NOT ANDROID)
        message("~~~~~~~~~UNIX Configuration~~~~~~~~~")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g2")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ggdb")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")
        if(Sanitize STREQUAL Thread)
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=thread -pie -g")
        elseif(Sanitize STREQUAL Address)
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address -O1 -fno-omit-frame-pointer")
        endif()
        add_definitions(-DPERFORMANCE)
    endif()
endif()


